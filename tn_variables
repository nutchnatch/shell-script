#!/bin/bash

# -x option os to run script in debug mode
# it prints every single line and values it executes

# Simple note-taking script

# Ask user for input
# "help read" - helps with read command
# "man builtins" - read is a shell builtin
# -p option give a user a friendly prompt
read -p "Your note:" note

# if we don't want to debug the whole script, we can remove -x and
# add "set -x" at the point we want to debug
#set -x
# get date
declare -r date=$(date)

# to stop debugging, we add "set +x"
#set +x

# get topic
declare -r topic="$1"

#declare notesdir="${HOME}"
# upercase to make clear that it is an environment variable set by the user
# if NOTESDIR is set its value is copied to notesdir
#[[ $NOTESDIR ]] && notesdir="${NOTESDIR}"

# cgeck whether NOTESDOR has a value, and if it doesn't, return value $HOME
declare notesdir=${NOTESDOR:-$HOME}

if [[ ! -d $notesdir ]]; then
	# if I can't create the dir, print an error msg
	mkdir "${notesdir}" 2> /dev/null || { echo "Cannot make directory ${notesdir}" 1>&2; exit 1; }
fi

# filename to write to
# when we use quotes (""), tilda (~) must be replaced by ${HOME}
# filename="~/${topic}notes.txt"
declare -r filename="${notesdir}/${topic}notes.txt"

if [[ ! -f $filename ]]; then
        # if I can't create the dir, print an error msg
        touch "${filename}" 2> /dev/null || { echo "Cannot create filename ${filename}" 1>&2; exit 1; }
fi

# check if file is writeable
[[ -w $filename ]] || { echo "${filename} is not writeable" 1>&2; exit 1; }

# see "help if"
# space must be added to the beggining and end of condition
#[[ $str ]] - str is not empty
#[[ $str="something" ]] - str equals "something"
#[[ $str="something"]] - always returns true, misses a space at the end
#[[ -e $fienzme ]] - file $filenam exists
#[[ -d $dirname ]] - $dirname is a directory
if [[ $note ]]; then
    # Add double quotes around variables allways
    echo "$date: $note" >> "$filename"
    # if we use single quote (''), we must escape them
    echo "Note '$note' saved to $filename" 1>&2
else 
    echo "No input; note wasn't saved." 1>&2
fi

# Add double quotes around variables allways
#echo "$date: $note" >> "$filename"
# if we use single quote (''), we must escape them 
#echo Note \'$note\' saved to $filename
#echo "Note '$note' saved to $filenamnote wasn't saved.e"
